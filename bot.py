import asyncio
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, CallbackContext
from datetime import datetime

TOKEN = '8192070018:AAG8sfBcVd10RGjT7ApS4bc3SO28KI-ZI3s'
GROUP_ID = '-4743904412'

QUESTIONS = [
    "üë§–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?",
    "üéÇ–°–∫–æ–ª—å–∫–æ –≤–∞–º –ª–µ—Ç?",
    "üéÆ –í–∞—à NickName –≤ Roblox (–ø—Ä–∏–º–µ—Ä: @melancholiaYT)?",
    "üìä–ö–∞–∫–æ–π —É –í–∞—Å —Ä–∞–Ω–≥ –≤ Pet Simulator 99?",
    "üîÑ–°–∫–æ–ª—å–∫–æ —É –í–∞—Å –ø–µ—Ä–µ—Ä–æ–∂–¥–µ–Ω–∏–π –≤ Pet Simulator 99?",
    "ü•ö–°–∫–æ–ª—å–∫–æ –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å —è–∏—Ü –∑–∞ —Ä–∞–∑?",
    "üê∂–°–∫–æ–ª—å–∫–æ –í—ã –º–æ–∂–µ—Ç–µ –æ–¥–µ–≤–∞—Ç—å –ø–∏—Ç–æ–º—Ü–µ–≤ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ?",
    "üêæ–°–∫–æ–ª—å–∫–æ —É –í–∞—Å Huge/Titanic –ø–∏—Ç–æ–º—Ü–µ–≤?",
    "‚è≥–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –í—ã –ø—Ä–æ–≤–æ–¥–∏—Ç–µ –≤ –∏–≥—Ä–µ? (—Å —É—á–µ—Ç–æ–º AFK)"
]

# –ò–Ω–¥–µ–∫—Å—ã –≤–æ–ø—Ä–æ—Å–æ–≤, –≥–¥–µ –æ—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º
NUMERIC_QUESTIONS = {1, 3, 4, 5, 6, 7}

user_answers = {}
user_states = {}
user_last_submission = {}  # –°–ª–æ–≤–∞—Ä—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –∑–∞—è–≤–∫–∏

async def start(update: Update, context: CallbackContext):
    buttons = [
        ["üíé–í–ª–∞–¥–µ–ª—å—Ü—ã –∫–ª–∞–Ω–∞ [UTKI]"],
        ["‚úîÔ∏è–ó–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –∫–ª–∞–Ω"],
        ["üíú–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∫–ª–∞–Ω–µ"]
    ]
    reply_markup = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
    await update.message.reply_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ü–æ–º–æ—â–Ω–∏–∫–∞-–ò–Ω—Ñ–æ—Ä–º–∞—Ç–æ—Ä–∞ –∫–ª–∞–Ω–∞ UTKI!\nüîß–ü–æ–ª–µ–∑–Ω–æ–µ –ø–æ—Å–ª–∞–Ω–∏–µ –æ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞:\n‚ùó–ï—Å–ª–∏ —Ç—ã —Å–ª—É—á–∞–π–Ω–æ –Ω–∞—á–∞–ª –∑–∞–ø–æ–ª–Ω—è—Ç—å '‚úîÔ∏è–ó–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –∫–ª–∞–Ω' –Ω–∞–ø–∏—à–∏ /cancel –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–∏—Ç—Å—è!üíñ", reply_markup=reply_markup)

async def handle_menu_selection(update: Update, context: CallbackContext):
    text = update.message.text
    user_id = update.effective_chat.id

    if text == "‚úîÔ∏è–ó–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –∫–ª–∞–Ω":
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—è–≤–∫—É —Å–µ–≥–æ–¥–Ω—è
        if user_id in user_last_submission:
            last_submission_date = user_last_submission[user_id]
            if last_submission_date == datetime.today().date():
                await context.bot.send_message(user_id, "‚ùå –í—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∑–∞—è–≤–∫—É —Å–µ–≥–æ–¥–Ω—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –∑–∞–≤—Ç—Ä–∞.")
                return

        user_answers[user_id] = []
        user_states[user_id] = True
        await context.bot.send_message(user_id, QUESTIONS[0])
    elif text == "üíé–í–ª–∞–¥–µ–ª—å—Ü—ã –∫–ª–∞–Ω–∞ [UTKI]":
        await context.bot.send_message(user_id, "üëë –í–ª–∞–¥–µ–ª—å—Ü—ã –∫–ª–∞–Ω–∞ UTKI:\n‚Ä¢ @melancholiaYT (–°–æ–∑–¥–∞—Ç–µ–ª—å)\n‚Ä¢ @Hildeyps (–ü–æ–º–æ—â–Ω–∏–∫ —Å–æ–∑–¥–∞—Ç–µ–ª—è –∫–ª–∞–Ω–∞)\n‚Ä¢ @tt8teen (–ë—ã–≤—à–∏–π —Å–æ–∑–¥–∞—Ç–µ–ª—å, –≤–Ω—ë—Å –æ–≥—Ä–æ–º–Ω—ã–π –≤–∫–ª–∞–¥ –≤ —Ä–∞–∑–≤–∏—Ç–∏–µ –∫–ª–∞–Ω–∞)")
    elif text == "üíú–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∫–ª–∞–Ω–µ":
        await context.bot.send_message(user_id, "‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏ –∫–ª–∞–Ω–µ [UTKI]\n‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: 5/75\n‚Ä¢ –£—Ä–æ–≤–µ–Ω—å –∫–ª–∞–Ω–∞: 6 —É—Ä–æ–≤–µ–Ω—å\n‚Ä¢ –¶–µ–ª–∏:\nü¶Ü–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∫–ª–∞–Ω –∞–∫—Ç–∏–≤–Ω—ã–º–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏\nü¶Ü–ü–æ–ø–∞—Å—Ç—å –≤ —Ç–æ–ø 100 –∫–ª–∞–Ω–æ–≤–æ–π –±–∏—Ç–≤—ã")
    else:
        await collect_answers(update, context)

async def collect_answers(update: Update, context: CallbackContext):
    user_id = update.effective_chat.id
    message = update.message.text.strip()

    if user_states.get(user_id, False):
        current_index = len(user_answers[user_id])

        # –ü—Ä–æ–≤–µ—Ä–∫–∞: –µ—Å–ª–∏ –≤–æ–ø—Ä–æ—Å —Ç—Ä–µ–±—É–µ—Ç —Ü–∏—Ñ—Ä—É, –∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤—ë–ª –Ω–µ —á–∏—Å–ª–æ
        if current_index in NUMERIC_QUESTIONS and not message.isdigit():
            await context.bot.send_message(user_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ.")
            return

        user_answers[user_id].append(message)

        if len(user_answers[user_id]) < len(QUESTIONS):
            next_question = QUESTIONS[len(user_answers[user_id])]
            await context.bot.send_message(user_id, next_question)
        else:
            await send_answers_to_group(update, context, user_id)
            user_states[user_id] = False
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –≤ —Å–ª–æ–≤–∞—Ä—å, —á—Ç–æ–±—ã –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å –∑–∞—è–≤–∫—É –æ–¥–Ω–∏–º —Ä–∞–∑–æ–º –≤ –¥–µ–Ω—å
            user_last_submission[user_id] = datetime.today().date()
    else:
        await update.message.reply_text("–ù–∞–∂–º–∏—Ç–µ '‚úîÔ∏è–ó–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –∫–ª–∞–Ω', —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∞–Ω–∫–µ—Ç—É.")

async def send_answers_to_group(update: Update, context: CallbackContext, user_id):
    user = update.effective_user
    username = f"@{user.username}" if user.username else f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.first_name}"
    answers = user_answers.pop(user_id, [])

    if answers:
        text = f"üì© –û—Ç–≤–µ—Ç—ã –æ—Ç {username}:\n\n" + "\n".join(
            [f"{QUESTIONS[i]} {answers[i]}" for i in range(len(answers))]
        )
        await context.bot.send_message(GROUP_ID, text)
        await context.bot.send_message(user_id, "‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–µ –∑–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –∫–ª–∞–Ω–∞.")

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã /cancel
async def cancel(update: Update, context: CallbackContext):
    user_id = update.effective_chat.id

    if user_states.get(user_id, False):
        user_answers.pop(user_id, None)  # –£–¥–∞–ª—è–µ–º –æ—Ç–≤–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_states[user_id] = False  # –ó–∞–≤–µ—Ä—à–∞–µ–º –∞–Ω–∫–µ—Ç—É
        await context.bot.send_message(user_id, "‚ùå –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã.")
    else:
        await update.message.reply_text("–í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∞–Ω–∫–µ—Ç—ã.")

def main():
    app = Application.builder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("cancel", cancel))  # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /cancel
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_menu_selection))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()

if __name__ == "__main__":
    main()